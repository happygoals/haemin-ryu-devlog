
## Beginning 2018
Senior Capstone Tasks (2018 – 2019)
1.	Establish the Scope of the project with requirements.
1.1.	Reduce the scope of the project (NOTE: THIS MAY OCCUR AGAIN IN THE PROCESS OF DEVELOPMENT)
2.	Reverse Engineer the Previous Capstone team’s source code
2.1.	Fix the issue preventing the team from executing the source code.
2.1.1.	 Contact Kurtis
2.1.2.	 Retrieve the Beacons from the ETCS office.
2.1.3.	 Retrieve the Moto G from the ETCS office.
2.2.	Discuss with the team core features and function found in the source code.
2.3.	Attempt to connect to the beacons that are in ETCS
2.3.1.	Figure out how this works in the code.
3.	Create a plan of Implementation
3.1.	Who will implement which features.
3.2.	In what order will the features be implemented.
3.3.	What technology will we use to implement certain features.
4.	Design a rough appearance for what the features should look like, or what the team wants it to look like.
4.1.	Web Page Appearance
4.2.	Target Advertisements Appearance
4.3.	Narration Option Appearance
4.4.	Photospheres and Supporting Photos appearance
4.5.	Opt in/out survey appearance


## Final 2018 
- Data Structure:
Our team create three different tables for web application. 
One of them is navigation mock data for data analytics. In this table, it has 5 different columns, ID, Time, Date, Beacon and Destination. We generate mock data for this table, because it is limited for data analytics to use and collect data from beacon at engineering building. we set route beacon under the beacon column and I’ll explain more about this later. 
The other two tables are for managing user account on web app. Once user create their userID, they need to prove EmployeeID which is already stored in Authorization table. Then, they can make their user account. 

* Heat map: 
Here is one of our data analytics named Heat map. we'll only focus on Parkview Cardiac department because it coincides with our project scope that we discuss with sponsors. we draw this map with reference with Parkview cardiac department, we then populate possible routes with beacons add destination beacons at each department and entrance. 

This is the example of beacon route set. First, we set possible route from entrance beacon to destination beacon. Then we draw the beacon route.
Each single beacon will have their own field, so that the number of visits can be stored from user’s passing by that specific beacons. Based on the specific field, we draw each beacon’s intensity on heat map. 
Parkview staff members can see which route has the most traffic or the least traffic based on time and date chose by them. 

And Heatmap.js is JavaScript library that we’ll use for viewing of data.  
